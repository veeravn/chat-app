version: '3.8'

services:
  websocket-server:
    build: .
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    environment:
      - PORT=8080
    env_file:
      - .env
    ports:
      - "8081-8083:8080"
    depends_on:
      postgres:
        condition: service_healthy
    command: ["/bin/bash", "-c", "./start_servers.sh $PORT"]

  load-balancer:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - websocket-server
    env_file:
      - .env
    command: ["/bin/bash", "-c", "./load_balancer.sh"]

  client:
    build: ./client
    ports:
      - "3000:3000"
    depends_on:
      - load-balancer
    env_file:
      - .env

  postgres:
    image: 'postgres:latest'
    ports:
      - 5432:5432
    env_file:
      - .env
    volumes:
      - ${PWD}/db-data/:/var/lib/postgresql/data/
      - ${PWD}/schema.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "psql -U postgres -d postgres -c 'SELECT 1' || exit 1"]
      interval: 20s
      retries: 5
      start_period: 30s
      timeout: 10s
  

volumes:
  db-data:
